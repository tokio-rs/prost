// Import test types with suffix applied - tests both well-known types and package-specific suffixes
mod imports_test {
    // Include the external package types
    pub mod external_package {
        include!(concat!(env!("OUT_DIR"), "/external_package.rs"));
    }

    // Include the imports test types in a sub-module so super::external_package works
    pub mod type_name_imports {
        include!(concat!(env!("OUT_DIR"), "/type_name_imports.rs"));
    }
}

use self::imports_test::*;
use alloc::string::ToString;

#[test]
fn test_well_known_and_package_specific() {
    let _ = type_name_imports::ImportTestMessageProto {
        // Test well-known type import - google.protobuf.Timestamp uses prost_types::Timestamp
        // (Well-known types are handled by prost_types crate, not generated by prost-build, so no suffix)
        created_at: Some(::prost_types::Timestamp {
            seconds: 1234567890,
            nanos: 123456789,
        }),
        // Test local nested message gets the package suffix ("Proto")
        nested: Some(type_name_imports::import_test_message::NestedMessageProto {
            content: "test".to_string(),
        }),
        // Test external package types get their specific suffix ("ABC")
        external_ref: Some(external_package::ExternalMessageABC {
            name: "external test".to_string(),
            value: 42,
        }),
        external_status: external_package::ExternalStatusABC::ExternalActive as i32,
    };
}
